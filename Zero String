Problem
You are given a binary string S of length N. You are allowed to perform the following types of operations on string S.
Delete any one character from S, and concatenate the remaining parts of the string. For example, if we delete the third character of 1101 S=1101, it becomes S=111.
Flip all the characters of S. For example, if we flip all character of 1101
S=1101, it becomes 0010
S=0010.
Given that you can use either type of operation any number of times, find the minimum number of operations required to make all characters of the string S equal to 0.

Input Format
The first line of input will contain a single integer T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains an integer N â€” the length of the string.
The next line contains a binary string S of length N.

# cook your dish here
for i in range(int(input())):
    n = int(input())
    s = input()
    zero_count = 0
    one_count = 0
    for j in s:
        if j == '0':
            zero_count+=1
        else:
            one_count+=1
    if zero_count==0:
        print((n-one_count) + 1)
    elif zero_count>=one_count:
        print(n-zero_count)
    elif one_count>zero_count:
        print(1+(n-one_count))
